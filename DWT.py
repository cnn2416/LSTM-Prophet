#!/usr/bin/env python
# -*- coding: utf-8 -*-

import numpy as np
import matplotlib.pyplot as plt
# import xlrd
import pywt
import pywt.data
import os
import re
import pandas as pd
from pylab import *
import xlrd
import pywt
import pywt.data

# dir_path='E:\个人\研究内容\JCK05\\'
# dir_path='E:\个人\研究内容\JCK05\\'
mode = pywt.Modes.smooth
# 时间转换
def datetransform(data):
    list = data.index
    # print(list)
    array = []
    # print(type(list))
    for index, i in enumerate(list):
        time = pd.to_datetime(i)
        array.append(time)
        # print(array)
    data.index = array

    data.sort_index()
    print(data)
    data.to_excel(file_name)


# 排序
def da_sort(data):
    data.sort_index(inplace=True)
    print(data)
    data.to_excel(file_name)

mpl.rcParams["font.sans-serif"] = ["SimHei"]
# 一个表一个图
def plt_map():
    fig = plt.figure(figsize=(20, 12))
    x = data.index  # 从(-1,1)均匀取50个点
    y = data['相对位移']
    plt.xlabel('时间')
    plt.ylabel('合成方向相对位移/mm')
    plt.title(name)
    plt.plot(x, y)
    plt.savefig(name + '.png')
    plt.show()


def plot_signal_decomp(data, w, title, index):
    """Decompose and plot a signal S.
    S = An + Dn + Dn-1 + ... + D1
    """
    w = pywt.Wavelet(w)  # 选取小波函数
    a = data
    ca = []  # 近似分量
    cd = []  # 细节分量
    for i in range(5):
        (a, d) = pywt.dwt(a, w, mode)  # 进行5阶离散小波变换
        ca.append(a)
        cd.append(d)
    rec_a = []
    rec_d = []

    for i, coeff in enumerate(ca):
        coeff_list = [coeff, None] + [None] * i
        rec_a.append(pywt.waverec(coeff_list, w))#重构

    for i, coeff in enumerate(cd):
        coeff_list = [None, coeff] + [None] * i
        if i ==3:
            print(len(coeff))
            print(len(coeff_list))
        rec_d.append(pywt.waverec(coeff_list, w))

    print(len(rec_d[0]),len(rec_d[1]),len(rec_d[2]),len(rec_d[3]),len(rec_d[4]))

    fig = plt.figure(figsize=(14, 12))
    # 在fig中添加曲线
    ax_main = fig.add_subplot(len(rec_a) + 1, 1, 1)
    ax_main.set_title(title)
    ax_main.plot(data)
    # ax_main.set_xlim(0,len(data) - 1)
    for i, y in enumerate(rec_a):
        ax = fig.add_subplot(len(rec_a) + 1, 2, 3 + i * 2)
        print(len(index),len(y))
        ax.plot(y,'r')
        # ax.set_xlim(index)
        ax.set_ylabel("A%d" % (i + 1))

    for i, y in enumerate(rec_d):
        print(len(index), len(y))
        ax = fig.add_subplot(len(rec_d) + 1, 2, 4 + i * 2)
        ax.plot(y,'g')
        # ax.set_xlim(0, len(y) - 1)
        ax.set_ylabel("D%d" % (i + 1))


dir_path = '.\JCK05\\'
dir = os.listdir(dir_path)
num = len(dir)
print(num)


for name in dir[0:21]:
    file_name = dir_path + name
    print(file_name)
    data = pd.read_excel(file_name, index_col=0)
    col_data1 = data.index
    col_data2 = data['displacement']
    plot_signal_decomp(col_data2, 'coif5', "DWT: Signal irregularity", col_data1)
    # plot_signal_decomp(col_data2, 'sym5', "DWT: Frequency and phase change - Symmlets5", col_data1)
    plt.show()

    # fig = plt.figure(figsize=(20,12))
    # x =data.index  # 从(-1,1)均匀取50个点
    # y =data['相对位移']
    # plt.plot(x, y,label=name)

# plt.legend()#显示图例，如果注释改行，即使设置了图例仍然不显示
# plt.savefig('JCK05.png')
# plt.show()






























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































